name: CI

on: [push]

jobs:
  ctest:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-22.04]
        mpisize: [1, 4, 16]
        ompsize: [1, 3]
        include:
          - os: macos-11
            mpisize: 1
            ompsize: 1
          - os: ubuntu-20.04
            mpisize: 1
            ompsize: 1
        exclude:
          - mpisize: 16
            ompsize: 3
          - mpisize: 4
            ompsize: 3
      fail-fast: false

    env:
      MPIRUN: "mpiexec --oversubscribe -np ${{ matrix.mpisize }}"
      OMP_NUM_THREADS: ${{ matrix.ompsize }}

    steps:
      - uses: actions/checkout@v3

      - name: apt
        if: ${{ runner.os == 'Linux' }}
        run: |
          sudo apt update
          sudo apt install liblapack-dev openmpi-bin libopenmpi-dev libscalapack-openmpi-dev

      - name: brew
        if: ${{ runner.os == 'macOS' }}
        run: |
          brew install openmpi scalapack

      - name: pip
        run: |
          python -m pip install numpy
          python3 -m pip install numpy

      - name: make workspace
        run: cmake -E make_directory ${{runner.workspace}}/build

      - name: cmake
        working-directory: ${{runner.workspace}}/build
        shell: bash
        run: |
          if [ ${{ runner.os }} = "macOS" ] ; then
            export FC=gfortran-11
          fi
          cmake -DCMAKE_VERBOSE_MAKEFILE=ON $GITHUB_WORKSPACE

      - name: build
        working-directory: ${{runner.workspace}}/build
        shell: bash
        run: cmake --build ./ -j4

      - name: ctest
        working-directory: ${{runner.workspace}}/build
        shell: bash
        run: ctest -V
